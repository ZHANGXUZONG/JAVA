2. Add Two Numbers

You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Runtime
3 ms
Beats
81.48%
Memory
47.4 MB
Beats
73.53%

头疼

class Solution23 {
	ListNode temp=new ListNode(1);
	ListNode temp1=new ListNode(0);
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		int l = l1.val+l2.val;
		l1.val=l%10;
		if(l1.next==null&&l2.next!=null){
			if(l>=10)l2.next.val++;
		   l1.next=addTwoNumbers(l2.next, temp1);
		}
		if(l2.next==null&&l1.next!=null){
			if(l>=10)l1.next.val++;
			l1.next=addTwoNumbers(l1.next, temp1);
		}
		if(l1.next!=null&&l2.next!=null){
			if(l>=10)l1.next.val++;
			l1.next=addTwoNumbers(l1.next, l2.next);
		}
		if(l1.next==null&&l2.next==null){
			if(l>=10)l1.next=temp;
		}
		return l1;
    }
}
