Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.


class Solution19 {
    public String longestCommonPrefix(String[] strs) {
		String s="";
		outer:
		for(int j=0;j<strs[0].length();j++){
			for(int i=1;i<strs.length;i++){
				if(strs[i].length()<=j||strs[i].charAt(j)!=strs[0].charAt(j))break outer;
			}
			s=s+strs[0].charAt(j);
		}
		return s;	
    }
}

class Solution20 {
    public String longestCommonPrefix(String[] strs) {
        if (strs==null||strs.length==0) return "";
        String pre=strs[0];
        for(int i=1; i<strs.length;i++)
        {
            while(strs[i].indexOf(pre)!=0)
            {
                pre=pre.substring(0,pre.length()-1);
            }
        }
        return pre;
    }
}

//快的方法稍微记一下吧，感觉用不太上
