Given two binary strings a and b, return their sum as a binary string.

 

Example 1:

Input: a = "11", b = "1"
Output: "100"
Example 2:

Input: a = "1010", b = "1011"
Output: "10101"
 

Constraints:

1 <= a.length, b.length <= 104
a and b consist only of '0' or '1' characters.
Each string does not contain leading zeros except for the zero itself.


BEFORE：BigInteger解决

import java.math.BigInteger;

class Solution {
    public String addBinary(String a, String b) {
        BigInteger A = new BigInteger(a,2);
        BigInteger B = new BigInteger(b,2);
        BigInteger S = A.add(B);
        return S.toString(2);
    }
}
09/12/2022 20:45	Accepted	13 ms	43.1 MB	java

advanced:
StringBuilder
可以实现字符串拼接、反序、替换、删减、插入

倒序相加然后反转

class Solution {
    public String addBinary(String a, String b) {
    StringBuilder sb = new StringBuilder();
        int i=a.length()-1;
        int j=b.length()-1;
        int carry=0;
        while(i>=0||j>=0){
            int sum =carry;
            if(i>=0) sum+=a.charAt(i)-'0';
            if(j>=0) sum+=b.charAt(j)-'0';
            sb.append(sum%2);     //用除2的结果和余数判断
            carry=sum/2;
            i--;
            j--;
            
        }
        if(carry!=0)sb.append(carry);  +
        return sb.reverse().toString();
    }
}
