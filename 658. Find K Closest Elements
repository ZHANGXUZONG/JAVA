
Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.

An integer a is closer to x than an integer b if:

|a - x| < |b - x|, or
|a - x| == |b - x| and a < b
 

Example 1:

Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]
Example 2:

Input: arr = [1,2,3,4,5], k = 4, x = -1
Output: [1,2,3,4]
 

Constraints:

1 <= k <= arr.length
1 <= arr.length <= 104
arr is sorted in ascending order.
-104 <= arr[i], x <= 104

class Solution implements Comparator<Solution> {
	int val;
	int ori;
	public Solution(int val,int ori)
	{this.val = val;
	this.ori=ori;}
	public List<Integer> findClosestElements(int[] arr, int k, int x){ //Line 7: error: constructor Solution in class Solution cannot be applied to given types; [in __Driver__.javaList<Integer> ret = new Solution().findClosestElements(param_1, param_2, param_3);
		Queue<Solution> find = new PriorityQueue<Solution>();
		for(int i=0;i<arr.length;i++)
		{
			find.offer(new Solution(Math.abs(arr[i]-x),arr[i]));
		}
		List<Integer> list = new ArrayList<>();
		for(int i =0;i<k;i++)list.add(find.poll().ori);
		return list;
	}
	


	public int compare(Solution I1,Solution I2){
		if(I1.val<I2.val)return 1;
		else if(I1.val==I2.val&&I1.ori<I2.ori)return 1;
		else return -1;
	}
	
}
